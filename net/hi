#!/bin/sh
# hi - download latest hilights from IRC log
set -o pipefail
log=~/tmp/highlights.txt

touch "$log"
exec {fd}<"$log"
flock --exclusive --timeout 3 $fd || {
	echo "Already running." >&2
	exit 1
}

fmt() {
	perl -M'POSIX' -M'POSIX::strptime' -a -F'\t' -nE'
		if (-t 1) {
			$C{DARK} = "\e[38;5;8m";
			$C{BOLD} = "\e[1m";
			$C{RESET} = "\e[m";

			$C{DATE} = "\e[$ENV{date}m";
			$C{BUFFER} = "\e[$ENV{color}m";
			$C{PREFIX} = "\e[$ENV{prefix}m";
			$C{PRIVATE} = "\e[$ENV{private}m";
			$C{NOTICE} = "\e[$ENV{notice}m";
			$C{TEXT} = "\e[$ENV{text}m";
		} else {
			%C = ();
		}

		($date, $buffer, @line) = @F;

		@tm = POSIX::strptime($date, "%Y-%m-%d %H:%M:%S %z");
		$udate = mktime(@tm);
		$fmt = (time - $udate < 70000) ? "%H:%M" : "%b %-d, %H:%M";
		$sdate = strftime($fmt, @tm);

		$line = join("\t", @line);
		chomp $line;

		if ($buffer !~ /#/ && $line =~ s/^<\Q$buffer\E> (\S+) \(\S+\): //) {
			$from = "-$1-";
		} elsif ($buffer !~ /#/ && $line =~ s/^<(\S+)> \1: //i) {
			$from = "-$1-";
		} elsif ($buffer !~ /#/ && $line =~ s/^<(\S+)> \1 //i) {
			$from = "* $1";
		} elsif ($line =~ s/^<--> Notice\((\S+)\): //) {
			$from = "-$1-";
		} elsif ($line =~ s/^<--> Mode (\S+) \[(.+?)\] by (\S+)$//) {
			$from = "-- $3:";
			$line = "Mode $1 [$2]";
		} elsif ($line =~ s/^<(\S+?)> //) {
			$from = "<$1>";
		} else {
			$from = "";
		}

		next if $from =~ /^-(auth|bot|chan|host|nick|oper|sasl)serv-$/i;
		next if ($buffer =~ /^(quake|under|what)net$/i && $from =~ /^-[HQX]-$/i);
		next if ($buffer eq "freenode" && $from =~ /^-(alis|phrik)-$/i);

		if ($from =~ /^-/) {
			$C{PREFIX} = $C{NOTICE};
		} elsif ($buffer !~ /#/) {
			$C{PREFIX} = $C{PRIVATE};
		}

		$sbuffer = $buffer;
		$sbuffer =~ s/[.#]/$C{BOLD}$&/ if $C{BOLD};

		$indent = " " x length($sdate);
		$indent = " " x 1;

		$f_dash = sprintf "$C{DARK}%s$C{RESET}", "--";
		$f_hdate = sprintf "$C{DATE}%s$C{RESET}", $sdate;
		$f_ddate = sprintf "$C{DARK}%s$C{RESET}", $sdate;
		$f_buffer = sprintf "$C{BUFFER}%s$C{RESET}", $sbuffer;
		$f_msg = sprintf "$C{PREFIX}%s$C{RESET} $C{TEXT}%s$C{RESET}", $from, $line;

		if ($lastbuf eq $buffer) {
			if ($firstdate > $udate-300) {
				print "${indent}${f_msg}\n";
			}
			elsif ($firstdate > $udate-1200 && time-$udate > 70000) {
				print "${indent}${f_msg}\n";
			}
			else {
				print "${f_dash} ${f_ddate} ${f_dash}\n";
				print "${indent}${f_msg}\n";
				$firstdate = $udate;
			}
		}
		else {
			print "${f_dash} ${f_hdate} ${f_buffer} ${f_dash}\n";
			print "${indent}${f_msg}\n";
			$firstdate = $udate;
		}

		$lastdate = $udate;
		$lastbuf = $buffer;
	'
}

url=$(attr -qg "xdg.origin.url" "$log" 2>/dev/null) ||
url=$(readlink "$log.url")
opts='-4'
size=$(stat -c %s "$log")
now=$(date +%s)

export date color prefix private notice text

date='38;5;102'
color='38;5;102'
prefix='38;5;145'
private=$prefix
notice=$prefix
text='38;5;188'
tail ${1:-"-3"} "$log" | fmt

date=$'38;5;9m\e[1'
color='38;5;72'
private='38;5;178'
prefix='38;5;150'
notice='38;5;66'
text=''
out=$({ curl -s -S -C "$size" $opts "$url" 2>&3 \
	| tee -a "$log" | fmt >&2; } 3>&1)
ret=$?
case $ret in
	0)  exit 0;;
	33) echo -e "\e[38;5;102m(No new items.)\e[m"; exit 0;;
	*)  echo -e "\e[33m$out\e[m" >&2; exit $ret;
esac
