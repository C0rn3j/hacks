#!/usr/bin/env bash
# helper script for youtube-dl

options=(
	--console-title
	--continue
	--write-description
	#--write-info-json
	)
urls=()
tagopts=()
kind=music

while (( $# )); do
	arg=$1
	case $arg in
	http://*|https://*)
		urls+=("$arg");;
	-kind|-type)
		kind=$2; shift;;
	-title)
		tagopts+=(-song "$2"); shift;;
	-disc|-disk)
		if [[ $2 == */* ]]; then
			tagopts+=(-disk "${2%%/*}" -disks "${2##*/}")
		else
			tagopts+=(-disk "$2")
		fi; shift;;
	-track)
		if [[ $2 == */* ]]; then
			tagopts+=(-track "${2%%/*}" -tracks "${2##*/}")
		else
			tagopts+=(-track "$2")
		fi; shift;;
	-[a-z]*)
		tagopts+=("$arg" "$2"); shift;;
	*)
		options+=("$arg");;
	esac
	shift
done

if (( ${#urls[@]} == 0 )); then
	echo "Usage: tube [-tagopt...] [--dlopt...] URL..."
	echo
	echo " -tagopt    mp4tag option"
	echo " --dlopt    youtube-dl option"
	exit
fi

re_youtube_full='^https?://www.youtube.com/watch.*[?&]v=([A-Za-z0-9_-]+)([&#]|$)'
re_youtube_short='^https?://youtu.be/([A-Za-z0-9_-]+)([?#]|$)'

for url in "${urls[@]}"; do
	# make a canonical URL
	if [[ $url =~ $re_youtube_full ]]; then
		url="http://www.youtube.com/watch?v=${BASH_REMATCH[1]}"
	elif [[ $url =~ $re_youtube_short ]]; then
		url="http://www.youtube.com/watch?v=${BASH_REMATCH[1]}"
	fi
	echo "Downloading $url"

	# obtain the output filename
	file=$(youtube-dl -o "%(title)s.%(ext)s" --get-filename "$url")
	f_name=${file%.*}
	f_ext=${file##*.}
	if read -e -p "name: " -i "$f_name" f_name && [[ $f_name ]]; then
		file=$f_name.$f_ext
	fi
	descr="$file.description"

	# download the video
	youtube-dl "${options[@]}" "$url" -o "${file//%/%%}"
	test -s "$file" || continue

	# note file modification time
	mtime=$(stat -c %Y "$file")

	# convert the container
	case $file in
	*.flv)
		temp=$file; file=${file%.*}.mp4
		ffmpeg -i "$temp" -acodec copy -vcodec copy "$file" \
			&& rm -f "$temp"
		;;
	esac

	# update file tags
	tagopts+=(-type "$kind")
	if [[ -s "$descr" ]]; then
		tagopts+=(-longdesc "$(< "$descr")")
	fi
	mp4tags -xid "youtube:$url" "${tagopts[@]}" "$file"
	rm -f "$descr"

	# set some standard xattrs
	{ setfattr -n "user.xdg.origin.url"   -v "$url" "$file"
	  setfattr -n "user.xdg.referrer.url" -v "$url" "$file"
	} >& /dev/null

	# restore file modification time
	touch --date="@$mtime" "$file"

	# display summary
	mp4info "$file"
done

if [[ $DISPLAY || $PULSE_SERVER ]]; then
	sound='/usr/share/sounds/freedesktop/stereo/complete.oga'
	if hash paplay
		then paplay "$sound"
	elif hash ogg123
		then ogg123 "$sound"
	elif hash mplayer
		then mplayer "$sound"
	fi &

	notify -i 'folder-videos' \
		-h category='transfer.complete' \
		-h transient \
		"Download complete" \
		"$file" &
fi < /dev/null >& /dev/null &
