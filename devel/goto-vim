#!/usr/bin/env perl
# goto-vim - open vim with a specific file and position taken from clipboard
#   Usually symlinked to 'vim' or even 'v'.

use feature "switch";

# this matches:
#   filename:lineno
#   filename:lineno:garbage
#   filename:lineno garbage
#   filename:/regex
#   filename:/regex garbage

my $specre = qr{ ^ ([^:]+) : (\d+ | /[^/]\S*) (?:[:\s].*)? $ }mx;

# this matches:
#   "a/foo/bar" â†’ foo/bar

my $diffpathre = qr{ ^ [a-z] / (.+) $ }mx;

# this matches:
#   ./path
#   ./path:garbage
#   /path
#   /path:garbage

my $pathre = qr{ (\.? / [^:]+) }mx;

# this matches:
#   File "/foo/bar", line 123,

my $pythonre = qr{ ^ \s* File \s "(.+?)", \s line \s (\d+), }mx;

# this script is usually symlinked as ~/bin/vim, so
# it needs to run the real vim by absolute path

my $vim = "/usr/bin/vim";

my @args = "vim";

sub parse {
	for (shift) {
		when ($pythonre) {
			my ($file, $line) = ($1, $2);
			return ($file, "+".$line);
		}
		when ($specre) {
			my ($file, $cmd) = ($1, $2);
			$file =~ s|^~/|$ENV{HOME}/|;
			$cmd =~ s|^|+|;
			return ($file, $cmd) if -e $file;
		}
		when ($diffpathre) {
			my ($file) = ($1);
			return ($file);
		}
		when ($pathre) {
			my ($file) = ($1);
			return ($file) if -e $file;
		}
		when (-e $_) {
			return ($_);
		}
		default {
			return;
		}
	}
	return;
}

if (@ARGV) {
	for my $arg (@ARGV) {
		if (my @r = parse($arg)) {
			push @args, @r;
		} else {
			push @args, $arg;
		}
	}
} elsif (length $ENV{DISPLAY}) {
	if (my @r = parse(`xclip -o -s primary`)) {
		push @args, @r;
	}
}

exec {$vim} @args;
