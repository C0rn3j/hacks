#!/usr/bin/env bash
# motd - display /etc/motd only when it is updated
# WTFPL v2 <http://sam.zoy.org/wtfpl/>

msg() { echo "motd: $*" >&2; }
err() { echo "motd: $*" >&2; }

usage() {
	echo "usage: motd [-Ddfq] [-o oldpath] [path]"
	echo ""
	echo "    -d       show diff if cached motd exists"
	echo "    -o path  use a different local cache path"
	echo "    -q       do not display modification time"
	echo "    path     use a different motd path"
	echo ""
	echo "'motd -dq' is suitable for login scripts."
	exit 2
}

mtime() { perl -e 'print ((stat $ARGV[0])[9])' "$1"; }
sdate() { perl -MPOSIX -e 'print strftime "%F %H:%M", localtime $ARGV[0]' "$1"; }
when() { sdate "$(mtime "$motd")"; }

copy() { mkdir -p "${2%/*}"; cp "$1" "$2" && touch -r "$1" "$2"; }

# set defaults
motd=/etc/motd
cached=$HOME/.cache/motd-$HOSTNAME
diff=false
quiet=false

# parse options
while getopts ":Ddfho:q" OPT; do
	case $OPT in
	d)	diff=true ;;
	o)	cached=$OPTARG ;;
	q)	quiet=true ;;
	\?)	err "unknown option '-$OPTARG'"
		usage ;;
	esac
done; shift $(( OPTIND-1 ))

[ "$1" ] && motd=$1

# do the job
if [ ! -f "$cached" ]; then
	# motd added (first run on this host)
	if [ -s "$motd" ]; then
		cat "$motd"
		$quiet || msg "$motd added (last update $(when))"
		copy "$motd" "$cached"
	elif [ -f "$motd" ]; then
		$quiet || msg "$motd is empty (last update $(when))"
		copy "$motd" "$cached"
	else
		$quiet || msg "$motd is missing"
	fi

elif [ ! -f "$motd" ]; then
	# motd removed
	if $diff; then
		diff -uN "$cached" "$motd"
	else
		msg "$motd is gone"
	fi
	rm "$cached"

elif ! cmp -s "$cached" "$motd"; then
	# motd updated
	if $diff; then
		diff -uN "$cached" "$motd"
	else
		cat "$motd"
	fi
	msg "updated (last update $(when))"
	copy "$motd" "$cached"

else
	# no change
	if ! $diff; then
		$quiet || cat "$motd"
	fi
	$quiet || msg "unchanged (last update $(when))"
	copy "$motd" "$cached" # in case local copy is newer
fi
