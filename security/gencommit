#!/bin/sh
# gencommit -- committed identity generator
#   (see http://en.wikipedia.org/wiki/Wikipedia:CID for explanation)
#
# - The hash function is SHA-1 (hashfunc="sha1").
#
# - The date format is "%Y-%m-%d".
#
# - The commitment secret is generated by hashing:
#
#     secret = hashfunc ( domain + " " + date + " " + passphrase )
#
# - The commitment itself is generated by hashing the secret, once.
#
#     public = hashfunc ( secret )
#
#     commitment = public + " " + domain + " " + date + " " + hashfunc

fmtseed() { printf '%s %s %s' "$@"; }
fmtdate() { date -d "$1" +'%Y-%m-%d'; }
fmthashfunc() { printf '%s' "$1" | tr 'A-Z' 'a-z' | tr -d -c 'a-z0-9'; }

stop() { echo "$*" >&2; exit 1; }

colwidth=11

readc() { read -p "$(printf '%*s ' $colwidth "$1")" -r "${@:2}"; }
echoc() { printf "%*s %s\n" $colwidth "$1" "${*:2}"; }

reads() { readc "$1" -e -i "${!2}" "$2"; }
readp() {
	if [[ "$DISPLAY" ]]; then
		printf '%*s (starting pinentry)' $colwidth "$1"
		local r=$(~/code/misc/askpin -p "$1" -t "${0##*/}" -W "$WINDOWID" \
			-d "Generating a commitment for '$domain' at $date.")
		declare -g "$2=$r"
		printf '\n'
	else
		readc "$1" -s "$2"
		printf '...\n'
	fi
}

domain=$1
date=$2
hash=$3
hash=$(fmthashfunc "${hash:-sha1}")

case $hash in
    sha1)
	hash() { sha1sum | awk '{print $1}'; };;
    sha256)
	hash() { sha256sum | awk '{print $1}'; };;
    *)
	echo "Unsupported hash '$hash'" >&2
	exit 1
esac

if [[ "$domain" ]]; then
	echoc "domain:" "$domain"
else
	reads "domain?" domain
fi

if ! [[ "$domain" ]]; then
	stop "Domain is empty."
fi

if [[ "$date" ]]; then
	date=$(fmtdate "$date")
	echoc "date:" "$date"
else
	reads "date?" date
	date=$(fmtdate "${date:-today}")
fi

if ! [[ "$date" ]]; then
	stop "Invalid date."
fi

readp "passphrase?" passphrase

if ! [[ "$passphrase" ]]; then
	stop "Passphrase is empty."
fi

secret=$(fmtseed "$domain" "$date" "$passphrase" | hash)

public=$(printf '%s' "$secret" | hash)

echoc "hash input:" "$(fmtseed "$domain" "$date" "...")"

echoc "secret:" "$(printf '\e[31m%s\e[m' "$secret")"

echoc "commitment:" "$(printf '\e[32m%s\e[m' "$public") $domain $date $hash"
