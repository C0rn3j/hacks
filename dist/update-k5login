#!/usr/bin/env python
from __future__ import print_function
import os
import fnmatch
import getopt
import socket
import sys

def getfqdn(host=None):
	return socket.gethostbyaddr(socket.gethostbyname(host or socket.gethostname()))[0]

def read_rules(infd):
	defprinc = None
	rules = {}
	lineno = 0
	for line in infd:
		lineno += 1
		line = line.rstrip()
		if not line or line.startswith("#"):
			continue
		if line[0].isspace():
			masks = line.split()
		else:
			line = line.split()
			defprinc = line[0]
			masks = line[1:]
		if not defprinc:
			print("warning: missing principal on line %d" % lineno, file=sys.stderr)
			continue
		if defprinc not in rules:
			rules[defprinc] = set()
		rules[defprinc] |= set(masks)
	return rules.items()

def write_k5login(outfd, rules):
	fqdn = getfqdn()
	for princ, masks in rules:
		if any(map(lambda mask: fnmatch.fnmatch(fqdn, mask), masks)): 
			print(princ, file=outfd)

rules_file = os.path.expanduser("~/lib/dotfiles/k5login.rules")
k5login_file = os.path.expanduser("~/.k5login")

opts, args = getopt.getopt(sys.argv[1:], "i:o:")
for opt, optarg in opts:
	if opt == "-i":		rules_file = optarg
	elif opt == "-o":	k5login_file = optarg

with open(rules_file, "r") as fd:
	rules = read_rules(fd)

with open(k5login_file, "w") as fd:
	write_k5login(fd, rules)
