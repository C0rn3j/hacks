#!/usr/bin/env bash

. lib.bash || exit

warn() { printf "\033[1;33mwarning:\033[m %s\033[m\n" "$*"; (( ++warnings )); }
err()  { printf "\033[1;31merror:\033[m %s\033[m\n" "$*";   ! (( ++errors )); }

# locate the certificates

roots='Cluenet nullroute'
errors=0
total=0

cd ~/lib/dotfiles/ca-certs

for ca in $roots; do
	if [[ ! -e "$ca.pem" ]]; then
		err "root '$ca' not found in source dir"
	fi
done

(( ! errors )) || exit

# parse the updater configuration

updater=$(command -v update-ca-certificates 2>/dev/null)

if [[ ! "$updater" ]]; then
	err "'update-ca-certificates' not found" || exit
fi

declare $(egrep "^(|LOCAL|ETC)CERT[A-Z]+=[^ ]+$" "$updater")

if [[ ! "$ETCCERTSDIR" || ! "$CERTSCONF" ]]; then
	err "sanity check: missing variables in updater script"
fi

if [[ "$LOCALCERTSDIR" ]]; then
	mode='local'
	dst="$LOCALCERTSDIR"
	say "using site-local path: $dst"
else
	mode='site'
	dst="$CERTSDIR/site"
	say "using subdirectory in global path: $dst"
fi

(( ! errors )) || exit

# perform the installation

if [[ "$mode" == 'site' ]]; then
	log "removing custom roots from global path"
	sudo rm -rf "$dst"
fi

log "installing to $dst"
for ca in $roots; do
	if sudo install -v -D -m 0644 "$ca.pem" "$dst/$ca.crt"; then
		(( ++total ))
	else
		(( ++errors ))
	fi
done

if [[ "$mode" == 'site' ]]; then
	log "adding custom roots to global config: $CERTSCONF"
	temp=$(mktemp "/tmp/ca-certificates.XXXXXXXX")
	(
		egrep -v "^!?site/" "$CERTSCONF"
		for ca in $roots; do
			echo "site/$ca.crt"
		done
	) > "$temp"
	sudo cp "$temp" "$CERTSCONF"
	rm -f "$temp"
fi

log "running update-ca-certificates"
sudo update-ca-certificates

log "installed $total certificates"
(( ! errors ))
