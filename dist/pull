#!/usr/bin/env bash

# (no lib.bash to avoid dependencies that may break)

[ "$DEBUG" ] && set -x
set -e

have() { command -v "$1" >/dev/null; }

log() {
	msg=$*; # nonlocal for debugging via silent()

	if [ -t 1 ]; then
		printf "\e[32m--\e[m %s\e[m\n" "$msg"
	fi
}

silent() {
	local tmp=$(mktemp /tmp/pull.XXXXXX) rc=0
	if "$@" >"$tmp" 2>&1; then
		rc=0
	else
		rc=$?
		echo "error: command '$1' returned $rc"
		echo "# log: $msg"
		echo "# cwd: $PWD"
		echo "# args: $*"
		cat "$tmp"
	fi >&2
	rm -f "$tmp"
	return $rc
}

force-pull() {
	local tmprepo='git://nullroute.eu.org/grawity/dotfiles-tmp.git'
	local date=$(date +%Y-%m-%d)
	local tmpbranch="tmp/$HOSTNAME/$date"

	if ! git pull --quiet --ff-only; then
		git checkout --quiet -B local
		git add --all :/
		git commit --quiet --allow-empty \
			-m "Local changes on $HOSTNAME at $date"
		git push --quiet "$tmprepo" "+local:$tmpbranch"
		git checkout --quiet -f master
		git rm --quiet -rf .
		git clean --quiet -fdX
		git reset --quiet --hard origin/master
		echo "Pushed local changes to:" >&2
		echo "    $tmprepo $tmpbranch" >&2
		git branch -D local
	fi > /dev/null
}

if [ ! "$xyzzy" ]; then
	export PATH="$HOME/code/bin:$PATH"

	if ! git var GIT_AUTHOR_IDENT >/dev/null; then
		echo "removed broken .gitconfig"
		mv -f ~/.gitconfig ~/gitconfig.bad ||
		rm -f ~/.gitconfig
	fi

	log "fetching code.git"
	cd ~/code
	silent git pull
	silent git repack -d
	xyzzy=42 exec dist/pull
else
	case `fqdn` in
	    *.cluenet.org|*.nathan7.eu|*.nullroute.eu.org)
		touch ~/.k5login
		;;
	esac

	# authorized_keys

	if [ -d ~/.gnupg ]; then
		log "updating authorized_keys"
		security/update-authorized-keys
	fi &

	# rwho

	if [ -d ~/lib/rwho ]; then
		log "updating rwho"
		( cd ~/lib/rwho
		  silent git pull --ff-only
		  if ./agent-linux/rwho-agent.sh status >/dev/null; then
			./agent-linux/rwho-agent.sh update
		  fi )
	fi &

	# dotfiles

	if [ -d ~/lib/dotfiles ]; then
		log "fetching dotfiles.git"
		( cd ~/lib/dotfiles
		  force-pull
		  silent git repack -d )

		log "running dotfiles/install"
		~/lib/dotfiles/install
	fi

	# dotfiles/.k5login

	if [ -f ~/.k5login ] && [ ! -k ~/.k5login ]; then
		log "updating .k5login"
		security/update-k5login
	fi
fi

wait
