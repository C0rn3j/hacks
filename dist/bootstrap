#!/usr/bin/env bash
mail=grawity@gmail.com

have() { command -v "$1" >/dev/null; }

log() { printf "\e[1;32m=\e[m %s\e[m\n" "$*"; }

log_ok() { printf "\e[1;34m=\e[m %s\e[m\n" "$*"; }

warn() { printf "\e[1;33mwarning:\e[m %s\e[m\n" "$*"; }

err() { printf "\e[1;31merror:\e[m %s\e[m\n" "$*"; ((++errors)); false; }

die() { err "$@"; exit 1; }

confirm() {
	local msg=$1 ans=
	read -ep "\001\e[1m\002(?)\001\e[m\002 $msg " -t 10 ans && [[ $ans == y ]]
}

check-gpg-version() {
	local version major minor rest
	version=$(gpg --version | sed 's/gpg (GnuPG) //; q')
	IFS="." read -r major minor rest <<< "$version"
	(( major >= 2 )) || (( major == 1 && minor >= 4 ))
}

export -f have
errors=0

PATH=~/code/bin:$PATH
cd ~/code

have git	|| err "git not installed"
have curl	|| err "curl not installed"
have perl	|| warn "perl not installed"
((errors))	|| exit

if have perl; then
	FQDN=$(fqdn)
elif have getent && f=$(getent hosts "$HOSTNAME" 2>/dev/null); then
	read _ FQDN _ <<< "$f"
elif have hostname && f=$(hostname -f 2>/dev/null); then
	FQDN=$f
else
	FQDN=$HOSTNAME
fi

if ! make -q; then
	log "building tools"
	make
fi

if [[ ! -d ~/lib/dotfiles/.git ]]; then
	log "cloning dotfiles.git"
	mkdir -p ~/lib
	git clone "https://github.com/grawity/dotfiles.git" \
		~/lib/dotfiles
fi

if [[ -z $LOCAL ]]; then
	log "symlinking dotfiles"
	~/lib/dotfiles/install
	. ~/.profile
fi

if [[ -L $LOCAL/man ]]; then
	rm -f "$LOCAL/man"
	mkdir -p "$LOCAL/man"
fi

if [[ -L $LOCAL/share/man ]]; then
	true
elif [[ -d $LOCAL/share/man ]]; then
	log "moving manual pages"
	cp -alf "$LOCAL/share/man" "$LOCAL/"
	rm -rf "$LOCAL/share/man" "$LOCAL/man/index.db"
	ln -s "../man" "$LOCAL/share/man"
fi

if [[ ! -f ~/.pki/ca/nullroute.pem ]]; then
	log "installing Nullroute CA certificate"
	mkdir -p -m 0700 ~/.pki/ca
	cp dist/nullroute.pem ~/.pki/ca/
	c_rehash ~/.pki/ca/ >/dev/null &
fi

if [[ ! -s ~/.ssh/authorized_keys ]]; then
	if have gpg && check-gpg-version; then
		log "enabling SSH key updates"
		ssh/ssh-authz-update -r
	else
		warn "unable to auto-update authorized_keys; gpg missing or too old"
	fi
fi

if [[ ! -s ~/.k5login ]] && [[ -f /etc/krb5.keytab ]]; then
	log "creating ~/.k5login"
	dist/update-k5login &
fi

if crontab -l >/dev/null && ! { crontab -l 2>/dev/null |
		grep -Eqs "[[:space:]]ID=pull[[:space:]]|code/dist/pull"; }; then
	log "adding dist/pull to crontab"
	(crontab -l 2>/dev/null || true;
		echo -e '@daily\tID=pull\t~/code/dist/pull') | crontab -
fi

if ! { have mailx && grep -Fqs NAILRC "$(which mailx)"; }; then
	log "installing heirloom-mailx"
	dist/install-mailx.sh
fi

if [[ $FQDN == "equal.cluenet.org" ]]; then
	log_ok "skipping ~/.forward on mail server"
elif [[ -s ~/.forward ]]; then
	log_ok "mail forwarded to $(sed 1q ~/.forward)"
else
	log "forwarding mail to $mail"
	echo "$mail" > ~/.forward

	log "sending a test email"
	echo "Test email from $USER($UID) at $FQDN" \
		| mailx -s "Test from $HOSTNAME" "$mail"
fi

if have perl && ! have cpanm; then
	log "Installing cpanminus"
	curl -L http://cpanmin.us | perl - --self-upgrade
fi

wait
