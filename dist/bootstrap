#!/usr/bin/env bash
set -e
pullkey_host=equal.cluenet.org
forward_mail=grawity@gmail.com

have() { command -v "$1" >/dev/null; }

log() { printf "\e[1;32m=\e[;1m %s\e[m\n" "$*"; }

log_ok() { printf "\e[1;34m=\e[m %s\e[m\n" "$*"; }

warn() { printf "\e[1;33mwarning:\e[m %s\e[m\n" "$*"; }

die() { printf "\e[1;31merror:\e[m %s\e[m\n" "$*"; exit 1; }

confirm() {
	local msg=$1 ans=
	read -ep "\001\e[1m\002(?)\001\e[m\002 $msg " -t 10 ans && [[ $ans == y ]]
}

check-gpg-version() {
	local version major minor rest
	version=$(gpg --version | sed 's/gpg (GnuPG) //; q')
	IFS="." read -r major minor rest <<< "$version"
	(( major >= 2 )) || (( major == 1 && minor >= 4 ))
}

export -f have

if have ~/code/tools/fqdn; then
	FQDN=$(~/code/tools/fqdn)
elif have getent; then
	read _ FQDN _ <<< "$(getent hosts "$HOSTNAME")"
else
	FQDN=$(hostname)
fi

have git	|| die "git not installed"
have curl	|| die "curl not installed"

log "Building tools"
(cd ~/code; make)

if [[ -d ~/lib/dotfiles/.git ]]; then
	commit=$(cd ~/lib/dotfiles && git log --oneline -1)
	log_ok "~/lib/dotfiles is at $commit"
else
	log "Cloning dotfiles.git"
	mkdir -p ~/lib
	git clone "https://github.com/grawity/dotfiles.git" \
		~/lib/dotfiles
fi

if [[ -z $LOCAL ]]; then
	log "Creating dotfile symlinks"
	~/lib/dotfiles/install
	. ~/.profile
fi

if [[ ! -f ~/.pki/ca/nullroute.pem ]]; then
	log "Installing Nullroute CA certificate"
	mkdir -p -m 0700 ~/.pki/ca
	cp ~/code/dist/nullroute.pem ~/.pki/ca/
	c_rehash ~/.pki/ca/
fi

if [[ -s ~/.ssh/authorized_keys ]]; then
	num=$(grep -c '^[[:alpha:]]' ~/.ssh/authorized_keys)
	log_ok "authorized_keys has $num keys"
else
	if have gpg && check-gpg-version; then
		log "Setting up sshupdate-gpg"
		~/code/ssh/sshupdate-gpg -rv
	elif have ssh-keygen && [[ ! -f ~/.ssh/id_sshupdate ]] &&
	confirm "GPG not found; configure sshupdate-ssh?"; then
		log "Generating a key for sshupdate-ssh"
		opts=(-q -f ~/.ssh/id_sshupdate -N ""
			-C "$USER/sshupdate@$FQDN")
		ssh-keygen "${opts[@]}" -t ecdsa ||
		ssh-keygen "${opts[@]}" -t rsa -b 768
		log "Uploading key to $pullkey_host"
		cat ~/.ssh/id_sshupdate.pub |
			ssh $pullkey_host "~/bin/pullkey --install"
		log "Updating SSH keys"
		~/code/ssh/sshupdate-ssh
	else
		warn "Unable to auto-update authorized_keys"
	fi
fi

if [[ -s ~/.k5login ]]; then
	log_ok "k5login has $(wc -l < ~/.k5login) principals"
else
	if have kinit && [[ -f /etc/krb5.keytab ]]; then
		log "Creating ~/.k5login"
		~/code/dist/update-k5login
	fi
fi

set +e
if crontab -l 2>/dev/null |
		grep -Eqs "[[:space:]]ID=pull[[:space:]]|code/dist/pull"; then
	log_ok "dist/pull is in crontab"
else
	log "Adding dist/pull to crontab"
	(crontab -l 2>/dev/null || true;
		echo -e '@daily\tID=pull\t~/code/dist/pull') | crontab -
fi
set -e

if have mailx && grep -Fqs NAILRC "$(which mailx)"; then
	log_ok "heirloom-mailx is installed"
else
	log "Installing heirloom-mailx"
	~/code/dist/install-mailx.sh
fi

if [[ $FQDN == "equal.cluenet.org" ]]; then
	log_ok "Skipping ~/.forward - this is the mail server"
elif [[ -s ~/.forward ]]; then
	log_ok "Mail is being forwarded to $(sed 1q ~/.forward)"
else
	log "Forwarding mail to $forward_mail"
	echo "$forward_mail" > ~/.forward

	if have mail; then
		log "Sending a test email"
		(echo "Test";
			hostname -f;
			uname -a;
			id;
			have getent && getent passwd "$USER"
		) | mail -s "Test from $HOSTNAME" "$forward_mail"
	else
		warn "'mail' not available; cannot send test email"
	fi
fi

if have cpanm; then
	log_ok "cpanminus is installed"
else
	log "Installing cpanminus"
	curl -L http://cpanmin.us | perl - --self-upgrade
fi
