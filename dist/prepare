#!/usr/bin/env bash
set -e

log() { echo "dist/prepare: $*"; }

test "$MAKELEVEL" ||
	cd ~/code

# Collect OS information

# Variables:
#
#   $OSTYPE	- system		- set by default in GNU bash
#
#   $HOSTTYPE	- architecture		- set by default in GNU bash
#   					| with fallback $(uname -m)
#
#   $MACHTYPE	- arch-company-system	- set by default in GNU bash
#   					| with fallback $HOSTTYPE-$OSTYPE
#
#   $DIST	- distro		- detected from various sources
#   					| from /etc/os-release $ID
#   					| from /etc/lsb-release $DISTRIB_ID
#					| from distro-specific files
#
#   $DISTTYPE	- arch-kernel-distro	- built from $HOSTTYPE-$(uname)-$DIST

test "$HOSTTYPE" || {
	log "warning: system does not set \$HOSTTYPE" >&2
	HOSTTYPE="$(uname -m)"
}

test "$MACHTYPE" || {
	log "warning: system does not set \$MACHTYPE" >&2
	MACHTYPE="$HOSTTYPE-$OSTYPE"
}

test "$DISTTYPE" || {
	if test -e "/etc/os-release"; then
		DIST=$(. /etc/os-release && echo "$ID")
	elif test -e "/etc/lsb-release"; then
		DIST=$(. /etc/lsb-release && echo "$DISTRIB_ID")
	elif test -e "/etc/debian_version"; then
		DIST="debian"
	else
		DIST="unknown"
	fi
	DISTTYPE="$HOSTTYPE-$(uname)-$DIST"
}

# Parse command line

unset nofail

while getopts 'DOdhmou:v' OPT; do
case $OPT in
	"D")	echo "$DIST"; exit;;
	"O")	echo "$OSTYPE"; exit;;
	"d")	echo "$DISTTYPE"; exit;;
	"h")	echo "$HOSTTYPE"; exit;;
	"m")	echo "$MACHTYPE"; exit;;
	"o")	RUNOPT=$OPT;;
	"u")	out=$OPTARG;;
	"v")	RUNOPT=$OPT;
		nofail=y;;
	"?")	exit 2;;
esac
done

# Locate the build directory

ARCHOBJ="obj/arch.$MACHTYPE"
DISTOBJ="obj/dist.$DISTTYPE"
HOSTOBJ="obj/host.$HOSTNAME"

if test "$out"; then
	case $out in
	a|arch)	OBJDIR="$ARCHOBJ";;
	d|dist)	OBJDIR="$DISTOBJ";;
	h|host)	OBJDIR="$HOSTOBJ";;
	*)	log "invalid \$out value '$out'" >&2
		exit 1;;
	esac
else
	if test "$OBJ"; then
		OBJDIR="$OBJ"
	elif test -L "$HOSTOBJ"; then
		OBJDIR="obj/$(readlink "$HOSTOBJ")"
	elif test -d "$HOSTOBJ"; then
		OBJDIR="$HOSTOBJ"
	elif test ! "$nofail"; then
		log "first build, please set \$out" >&2
		echo "  arch: $MACHTYPE" >&2
		echo "  dist: $DISTTYPE" >&2
		echo "  host: $HOSTNAME" >&2
		exit 1
	fi
fi

# Handle remaining command-line options

case $RUNOPT in
	"o")	echo "$OBJDIR"; exit;;
	"v")	echo "ostype:   O=${OSTYPE-?}";
		echo "dist:     D=${DIST-?}";
		echo "hosttype: h=${HOSTTYPE-?}";
		echo "machtype: m=${MACHTYPE-?}";
		echo "disttype: d=${DISTTYPE-?}";
		echo "obj:      o=${OBJDIR-?}";
		exit;;
esac

# Create build directory and re-symlink $HOSTOBJ to point to it

if test "$out" || ( test "$OBJDIR" && test ! -d "$OBJDIR" ); then
	if test -L "$HOSTOBJ"; then
		log "removing old symlink '$HOSTOBJ'"
		rm -f "$HOSTOBJ"
	fi

	log "creating build directory '$OBJDIR'"
	mkdir -p "$OBJDIR"

	if test "$OBJDIR" != "$HOSTOBJ"; then
		if test -d "$HOSTOBJ"; then
			log "removing old host directory '$HOSTOBJ'"
			rm -rf "$HOSTOBJ"
		fi

		log "symlinking '$HOSTOBJ' to shared build directory"
		ln -sf "${OBJDIR##*/}" "$HOSTOBJ"
	fi
fi
