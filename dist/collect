#!/usr/bin/env bash

have() { command -v "$1" >&/dev/null; }

: ${CC=cc}

echo "ostype:"
  echo ".gnu.ostype = $OSTYPE"
  echo ".uname.kernel = $(uname)"
  echo ".uname.release = $(uname -r)"
  echo ".uname.version = $(uname -v)"
  echo ".perl.osname = $(perl -MConfig -e 'print "$Config{osname}\n"')"
  echo ".perl.osvers = $(perl -MConfig -e 'print "$Config{osvers}\n"')"
  have python && {
    echo ".python.platform = $(python -c 'import sys; sys.stdout.write(sys.platform)')"
  }
echo "arch:"
  echo ".gnu.hosttype = $HOSTTYPE"
  echo ".gnu.machtype = $MACHTYPE"
  echo ".uname.machine = $(uname -m)"
  echo ".uname.processor = $(uname -p)"
  have $CC && {
    echo ".cc.dumpmachine = $($CC -dumpmachine)"
    echo ".cc.multiarch = $($CC -print-multiarch)"
  }
  have dpkg-architecture && {
    echo ".dpkg.gnutype = $(dpkg-architecture -qDEB_HOST_GNU_TYPE)"
    echo ".dpkg.multiarch = $(dpkg-architecture -qDEB_HOST_MULTIARCH)"
  }
  echo ".perl.arch = $(perl -MConfig -e 'print "$Config{archname}\n"')"
  have ruby && {
    echo ".ruby.platform = $(ruby -e 'puts RUBY_PLATFORM')"
  }
echo "dist:"
  if test -f /etc/os-release
    then f=/etc/os-release
  elif test -f /usr/lib/os-release
    then f=/usr/lib/os-release
  fi
  test -f "$f" && (
    . /etc/os-release
    echo ".os-release.id = $ID"
    test "$ID_LIKE" &&
      echo ".os-release.like = $ID_LIKE"
    test "$NAME" &&
      echo ".os-release.name = $NAME"
  )
true
