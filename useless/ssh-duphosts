#!/usr/bin/env python
# ssh-duphosts v1.0
# Checks for duplicate entries in ~/.ssh/known_hosts

from __future__ import print_function
import os

knownhosts_path = os.path.expanduser("~/.ssh/known_hosts")
dedup = False # TODO: rename

keys = {}

fh = open(knownhosts_path, "r")

# check for duplicates
for line in fh:
	line = line.strip()
	if line == "" or line.startswith("#"):
		continue
	
	host, ktype, key = line.split(" ")
	if (ktype, key) in keys:
		keys[ktype, key].append(host)
	else:
		keys[ktype, key] = [host]

# print results
if dedup:
	for entry in keys:
		ktype, key = entry
		hosts = ",".join(keys[entry])
		print(" ".join([hosts, ktype, key]))
else:
	for entry in keys:
		hosts = keys[entry]
		ktype, key = entry
		if len(hosts) > 1:
			print("Key [%(shortkey)s] has %(count)d entries:" % {
				"shortkey": ktype + " ..." + key[-15:],
				"count": len(hosts)
			})
			print("\t%s" % "\n\t".join(hosts))
