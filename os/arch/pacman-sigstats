#!/usr/bin/env python
# pacman-sigstats - signed package percentages for Arch Linux pacman
import pycman

class Repository(object):
    def __init__(self, db=None):
        self.pkgs = []
        self.db = db
        self.pkgs += self.db.search('')

    def getSignedCounts(self):
        total = len(self.pkgs)
        signed = 0
        for p in self.pkgs:
            if p.base64_sig:
                signed += 1
        return signed, total

class Manager(object):
    def __init__(self):
        self.rstats = {}
        self.handle = pycman.config.init_with_config('/etc/pacman.conf')
        for db in self.handle.get_syncdbs():
            self.rstats[db.name] = Repository(db)

    def getSignedPercentages(self):
        for name, db in self.rstats.items():
            signed, total = db.getSignedCounts()
            if total == 0:
                continue
            try:
                perc = 100.0 * signed / total
            except ZeroDivisionError:
                perc = 0
            yield name, perc, signed, total

if __name__ == '__main__':
    r = Manager()
    namewidth = max(map(len, r.rstats))
    stats = list(r.getSignedPercentages())
    stats.sort(key=lambda i: i[0])
    stats.sort(key=lambda i: i[1], reverse=True)
    for name, perc, signed, total in stats:
        print("%-*s  %3d%% (%d out of %d)" % (namewidth, name, perc, signed, total))
