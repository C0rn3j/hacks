#!/usr/bin/env bash
# quick way to access CIFS/SMB shares
# mount.cifs must be installed setuid-root

if ! [[ $1 ]]; then
	echo "Usage: $0 share mountpoint" >&2
	exit 2
fi

remote=$1
mountpoint=$2
proto=cifs
host=
path=
authhost=

while getopts 'a:' OPT; do
	case $OPT in
		a)	authhost=$OPTARG;;
	esac
done; shift $((--OPTIND))

if [[ $remote = *:* ]]; then
	proto=${remote%%:*}
	remote=${remote#*:}
fi

if [[ $remote = *:* ]]; then
	host=${remote%%:*}
	path=${remote#*:}
elif [[ $remote = //*/* ]]; then
	remote=${remote#//}
	host=${remote%%/*}
	path=${remote#*/}
else
	echo "Invalid remote path"
	exit 1
fi

if [[ -z $mountpoint ]]; then
	if [[ $path == $USER ]]; then
		mountpoint=$host
	else
		mountpoint=${path##/*}
	fi
	mountpoint=$HOME/fs/$mountpoint
	mkdir -pm 0700 "$mountpoint"
fi

getcred() {
	local file=$(mktemp)
	getnetrc -d "$@" "$authhost" > "$file" || \
	getnetrc -d "$@" "$host" > "$file" || {
		if [[ -t 0 ]]; then
			echo "Enter credentials for $host:$path"
			read -rp 'username: ' -ei "$LOGNAME" r_user
			read -rp 'password: ' -es r_pass; echo
			printf 'username=%u\npassword=%p\n' > "$file"
			unset r_user r_pass
		else
			echo "No credentials for $authhost found." >&2
			exit 1
		fi
	}
	echo "$file"
}

[[ $authhost ]] || authhost=$host

connect() {
	case $proto in
	sftp)
		sshfs "$host:$path" "$mountpoint" -o "allow_root"
		;;
	cifs|smb)
		local creds=$(getcred -f "username=%u%npassword=%p")
		local secmode=ntlmv2
		if grep -Fxqs "password=*" "$creds"; then
			secmode=krb5
		fi
		sudo mount.cifs "$host:$path" "$mountpoint" \
			-o "sec=$secmode,credentials=$creds,uid=$(id -u),gid=$(id -g),file_mode=0600,dir_mode=0700,iocharset=utf8"
		rm -f "$creds"
		;;
	esac
}

connect
