#!/usr/bin/env bash
: ${UID:=$(id -u)}
: ${GID:=$(id -g)}

. ~/code/lib/bash/cred

withoption() {
	[[ $options =~ (^|,)$1(,|$) ]]
}

do_mount() {
	local name=$1 device=$2 fstype=$3 options=$4
	local host= path= mtpt= mtopts=
	
	mtpt="$HOME/fs/$name"
	mtopts='nosuid,nodev'

	mkdir -pm 0700 "$mtpt"

	case $fstype in
		9p)
			if [[ $device != *!* ]]; then
				device="tcp!$device"
			fi
			mtopts="-c loose"
			if withoption 'uid'; then
				mtopts+=" -i"
			else
				mtopts+=" -u"
			fi

			9mount $mtopts "$device" "$mtpt" &&
			echo "Mounted 9p#$device on $mtpt"
			;;

		smb)
			echo "Warning: fstype '$fstype' is obsolete. Please use 'cifs'." >&2
			;&
		cifs)
			local creds= secmode=

			if [[ $device == //* ]]; then
				host=${device#//}
				host=${host%%/*}
				unc=$device
			elif [[ $device == *:* ]]; then
				host=${device%%:*}
				path=${device#*:}
				unc="//$host/$path"
			fi

			if withoption 'multiuser'; then
				secmode="sec=krb5"
			elif withoption 'sec=(krb5|krb5i|krb5p)'; then
				secmode="user=$USER,cruid=$UID"
			else
				creds=$(mkcredfile)
				getcred_samba "$host" "cifs" "cifs:$unc" >"$creds"
				if grep -Fxqs "password=*" "$creds"; then
					secmode="sec=krb5,user=$USER,cruid=$UID"
				else
					secmode="sec=ntlmv2,credentials=$creds"
				fi
			fi

			mtopts+=",fsc,iocharset=utf8,$secmode,$options"
			if withoption 'uid'; then
				mtopts+=",uid=$UID,gid=$GID,file_mode=0600,dir_mode=0700"
			fi

			echo "Using $mtopts"
			sudo mount -t cifs "$device" "$mtpt" -o "$mtopts" &&
			echo "Mounted cifs#$device on $mtpt"
			[[ $creds ]] && rm -f "$creds"
			;;
		
		sftp)
			mtopts+=",kernel_cache,transform_symlinks"
			[[ $options ]] && mtopts+=",$options"
			sshfs "$device" "$mtpt" -o "$mtopts" &&
			echo "Mounted sftp#$device on $mtpt"
			;;
	esac
}

mkcredfile() {
	mktemp --tmpdir=/dev/shm "credentials.$UID.XXXXXXXX"
}

fsname=$1
device=$2
fstype=$3
options=$4

[[ $fsname ]] || usage

if [[ $device && $fstype ]]; then
	do_mount "$fsname" "$device" "$fstype" "$options"
	exit $?
fi

while read name device fstype options; do
	if [[ $name == "$fsname" ]]; then
		do_mount "$name" "$device" "$fstype" "$options"
		exit $?
	fi
done < ~/lib/nfstab

echo >&2 "Filesystem not found"
exit 1
