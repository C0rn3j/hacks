#!/usr/bin/env bash
# Print the current session's parent process name.

get_by_pssid() {
	local pid=${1:-$$} service= leader_pid=

	# our Session ID (= PID of whatever started the session)
	local sid=$(echo $(ps -p $pid -o "sess="))
	(( sid )) || return 1

	# session leader's Parent PID
	local sppid=$(echo $(ps -p $sid -o "ppid="))
	(( sppid )) || return 1

	leader_pid=$sppid

	local cmd=$(get_cmdline $leader_pid)
	case $cmd in
		"sshd: "*)
			service='ssh';;
		"in.telnetd: "*)
			service='telnet';;
		"SCREEN")
			service='screen';;
		"tmux"|"tmux "*)
			service='tmux';;
		gnome-terminal|konsole|xterm|yakuake)
			service='x11';;
		*)
			service=-
	esac
	printf '%s %d (%s)\n' "$service" "$leader_pid" "$cmd"
}

get_by_systemd() {
	local pid=${1:-$$} service= leader_pid=

	local asid=$(< "/proc/$pid/sessionid")
	local info=$(loginctl show-session "$asid")
	while IFS='=' read -r key value; do
		case $key in
		Remote)
			is_remote=$value;;
		Leader)
			leader_pid=$value;;
		Service)
			service=$value;
		esac
	done <<< "$info"

	[[ $service == gdm-* ]] &&
		service=${service%%-*}

	local cmd=$(get_cmdline $leader_pid)
	printf '%s %d (%s)\n' "$service" "$leader_pid" "$cmd"
}

get_cmdline() {
	echo $(ps -p $1 -o 'cmd=')
}

if [[ -f /proc/self/sessionid ]] && command -v 'loginctl' >/dev/null; then
	get_by_systemd
else
	get_by_pssid
fi
