#!/usr/bin/env bash
# Dotfile updater.
. ~/lib/include/util.sh 2> /dev/null

FQDN=$(getent hosts 127.0.0.1 | awk '{print $2}' | sed 's/\.$//')

if [[ $FQDN == "equal.cluenet.org" ]]; then
	BASE="https://snowflake.nullroute.eu.org"
else
	BASE="https://equal.cluenet.org"
fi
BASE="$BASE/~grawity/dotfiles"

CACERT=~/lib/ca/nullroute.pem

new_cert='
-----BEGIN CERTIFICATE-----
MIIDkDCCAnigAwIBAgICEAAwDQYJKoZIhvcNAQEFBQAwODELMAkGA1UEBhMCTFQx
EjAQBgNVBAoMCU51bGxyb3V0ZTEVMBMGA1UEAwwMTnVsbHJvdXRlIENBMB4XDTEw
MTExMjE1NTYzM1oXDTIwMTEwOTE1NTYzM1owODELMAkGA1UEBhMCTFQxEjAQBgNV
BAoMCU51bGxyb3V0ZTEVMBMGA1UEAwwMTnVsbHJvdXRlIENBMIIBIjANBgkqhkiG
9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvHSu5/7GWZVf/9jexTmqDY9aFmeaIo1V46oT
wYwwI1F2qWIwU4KONs4pyKQ2YyjbIdW/PlZLMdfTdxr7WQHsJVOhen7C2NCv2s+z
iwYz9NWK9CmxvTOHPdflM/HApiaBLIqZQfwMENa4aFKNfr2WzVat6eeAshabhiIf
pWn/uy3QdtjBEAuYUeaAsmGp0N5c/yW7dW9KQ4vVK4peyCOoeKdpeMVmnQKloZDw
q9pC7Y3RdKZ9eYZEC7/A9mMaudvVzNaaYfsS7FXrN/t8QbvX5ks08QJdDzqth1Bg
FOU50UyrfKGeZD7P2vRMaqxg9BmcYUm0U7bkmWGj+Gkj6CLe4wIDAQABo4GjMIGg
MA8GA1UdEwEB/wQFMAMBAf8wCwYDVR0PBAQDAgEGMB0GA1UdDgQWBBTK1WqMXwxT
Z2Lcv03CPEYFdCb56DBhBgNVHSMEWjBYgBTK1WqMXwxTZ2Lcv03CPEYFdCb56KE8
pDowODELMAkGA1UEBhMCTFQxEjAQBgNVBAoMCU51bGxyb3V0ZTEVMBMGA1UEAwwM
TnVsbHJvdXRlIENBggIQADANBgkqhkiG9w0BAQUFAAOCAQEAYFCTsMlNEaEP7wZ7
bzpLxmBL+OhfXquvBQh3qE4COBZGGk2I8wI+CdfPKipSWxowVGxO8WWf9MTF+dXX
/lxrL+hSwxqFO0i/3rB0PrAPV2DvYX/PM9SuR/oZNGdEsLoyXbZX1id5NdT5QEMx
cCRfGygWd3WRqg0YiSbrXH8e/H+mQlt8x95RJhqaGv36QXaBiehuCYj2mP+QLQmp
koxRWtdOD/JVxGVrD59a6xXiz++Tb0EuqLF3GgBY598QMonYpO9IL6sxxxFda/gy
YYHGxxwT8vv4XPjqoVohFXnXNZWBovb5GHvCL0uJ/qOLOY7tubtAHnXOXPRYd+z+
maFmqw==
-----END CERTIFICATE-----
'
new_fpr='f7f1a2d38a095926f5ead41e37b28efbb86d11bf'

update() {
	cd || die "could not chdir into $HOME"

	if [[ $(x509fp < "$CACERT") != $new_fpr ]]; then
		printf "%s" "$new_cert" > "$CACERT"

		temp=$(mktemp "dotrc-$USER.XXXXXX") || die "mktemp failed"
		get "$BASE/mail.php?host=$FQDN" "$temp"
		rm -f "$temp"
	fi

	rm -vf .bash_login
	rm -vf .bash_profile
	get "$BASE/bashrc" .bashrc
	get "$BASE/profile" .profile
	get "$BASE/gitconfig" .gitconfig
	get "$BASE/vimrc" .vimrc
	get "$BASE/ssh_config" .ssh/config
}

## Other functions

have() { command -v "$@" >& /dev/null; }

log() { [ -t 0 ] && printf "%s\n" "$*"; }

die() { echo "dotrc: fatal: ${1:-previous command failed}" >&2; exit 1; }

x509fp() {
	openssl x509 -outform der | sha1sum | awk '{print $1}'
}

get() {
	local url=$1 file=$2 mode=$3 temp=''
	log "fetching $file from $url"

	mkdir -p "$(dirname "$file")"
	temp=$(mktemp "dotrc-$USER.XXXXXX") || die "mktemp failed"
	if fetch "$url" "$temp" && [ -s "$temp" ]; then
		# easiest way to preserve modes
		cat "$temp" > "$file"

		if [ "$mode" ]; then
			log "changing modes for $file to $mode"
			chmod "$mode" "$file"
		fi
	else
		echo "dotrc: fetch failed: $url" >&2
	fi
	rm -f "$temp"
}

if have curl; then
	fetch() { curl -sLSf --cacert "$CACERT" "$1" -o "$2"; }
elif have wget; then
	fetch() { wget -q --ca-certificate "$CACERT" "$1" -O "$2"; }
else
	die "no HTTP client"
fi

## Do stuff.
if [ -f ~/lib/nullroute.pem ]; then
	mkdir -v -pm 0755 ~/lib/ca
	mv -v ~/lib/nullroute.pem ~/lib/ca
fi

#<< '#>>'
if ! [ -e "$CACERT" ]; then
	die "CA certificate not found: $CACERT"
fi
#>>
mkdir -pm 0700 ~/tmp || die "unable to create temporary directory"
update
