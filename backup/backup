#!/usr/bin/env bash

. lib.bash

status() {
	if [[ -t 1 ]]
		then printf '\e[1;36m--\e[m \e[36m%s\e[m\n' "$*"
		else printf '%s\n' "-- $*"
	fi
	settitle "$progname: $*"
}

obnam_default=()

obnam_rain=(
	--repository ~/Backup/obnam-repository
	--encrypt-with D24F6CB2C1B52632
)

do_obnam() {
	local profile=default
	if [[ $1 == @* ]]; then
		profile=${1#@}
		shift
	fi
	profile="obnam_${profile}[@]"

	log "backing up $*"
	schedtool -B -e obnam backup "${!profile}" "$@"
}

do_rsnapshot() {
	local profile=home
	if [[ $1 == @* ]]; then
		profile=${1#@}
		shift
	fi

	schedtool -D -e ionice -c 3 \
	rsnapshot -c ~/Backup/config/rsnapshot-$profile.conf "$@"
}

do_rsync() {
	local src=$1 dest=$2; shift 2

	log "rsyncing $src -> $dest"
	rsync "$src" "$dest" -aHAXvzh --delete-after --delete-excluded "$@"
}

local_rsync() {
	local src=$1

	case $src in
	$HOME/*) do_rsync "$src" "$b/${src#$HOME/}";;
	*)       do_rsync "$src" "$b/_root/${src#/}";;
	esac
}

do_pull() {
	local dir=$1 url=$(cd "$1" && git config remote.origin.url)

	log "pulling $url -> $dir"
	(cd "$dir" && git pull --ff-only origin)
}

do_unison() {
	log "running Unison profile '$1'"
	unison "$@" -auto -terse
}

do_kinit() {
	log "obtaining Kerberos tickets for $princ"
	k5start_base=$(mktemp -d /tmp/backup_XXXXXXXX)
	export KRB5CCNAME="FILE:${k5start_base}/krb5cc"
	k5start -K 15 -b -p "${k5start_base}/pid" -L -q "$@"
	trap 'do_kdestroy' EXIT
}

do_kdestroy() {
	if [ -e "$k5start_base/pid" ]; then
		kill $(< "${k5start_base}/pid")
		unset KRB5CCNAME
		rm -rf "$k5start_base"
	fi
}

if [[ ! $_inhibited ]]; then
	export _inhibited=$$
	exec gnome-inhibit \
		--who "backup" \
		--what "suspend" \
		--why "Performing a backup" \
		--always -- "$0" "$@"
fi

set -e

umask 077

b="/mnt/backup"

job=${1%/}; shift

case $job in
	--jobs)
		sed -rn '/^case \$job in$/,/^esac$/ { s/^\t(\S+)\)$/\1/p }' "$0"
		exit ;;
esac

mkdir -p ~/Backup/.log
exec {fd}>~/Backup/.log/$job.log
flock -x -n $fd || die "job $job is already running"

status "running job '$job'"

case $job in
	push-hd)
		#do_obnam ~
		do_rsnapshot @home sync
		do_rsnapshot @home snapshot
		local_rsync ~/Attic/Chatlogs/ofb.net/
		;;
	online)
		$0 twitter
		$0 servers
		$0 irc
		$0 gale
		;;
	servers)
		for host in $(< ~/Backup/hosts.txt); do
			$0 @$host
		done
		for host in wolke; do
			$o root@$host
		done
		;;
	root@*)
		host=$job
		do_rsync $host:/ ~/Backup/Server-roots/${host#root@}/	\
			--one-file-system --fake-super
		;;
	@*)
		host=${job#@}
		dests=()
		for dir in ~/Backup/Homes/*/; do
			dests+=(--copy-dest "$dir")
		done
		do_rsync $host: ~/Backup/Homes/$host/			\
			-f "merge $HOME/Backup/global-rsync-filter" -F	\
			"${dests[@]}"
		;;
	twitter)
		~/code/backup/twitter-backup
		;;
	irc)
		do_rsync virgule:irclogs/ ~/Attic/Chatlogs/current/	\
			--copy-dest ~/Backup/Homes/
		;;
	gale)
		do_rsync \
			ofb.net:'~jtr/glog/'			\
			~/Attic/Chatlogs/ofb.net/jtr-glog/	\
			--exclude '/:glog.out'			\
			;
		do_rsync \
			ofb.net:'~egnor/etc/gale/auth/'		\
			~/Attic/Chatlogs/ofb.net/cached-keys/	\
			--exclude 'tmp.*'			\
			;
		;;
	cluenet)
		dir=$b/Backup/Cluenet

		do_kinit -f "$dir/backup.keytab" -u "grawity/backup@CLUENET.ORG"

		do_pull $dir/virgule/accounts/
		do_pull $dir/radian/accounts/
		do_pull $dir/radian/ircd-config/
		do_rsync \
			root@radian.cluenet.org:/backup/	\
			$dir/radian/backup/			\
			--exclude '/accounts/'			\
			;
		do_rsync \
			root@radian.cluenet.org:/var/www/	\
			$dir/radian/www/			\
			--exclude '/main/cluewikicache/'	\
			;

		do_kdestroy
		;;
	grawpqi)
		dir=/run/media/grawity/grawpqi/
		mountpoint -q "$dir" || die "'grawpqi' not mounted"
		do_obnam @rain "$dir"
		;;
	*)
		die "unknown job '$job'"
		;;
esac

echo "$(date -Isecond)" >&$fd
