#!/usr/bin/env bash
# replacement for dmenu_run, with usage-sorted history
#
# This is not the same script as in ~/bin, but a minimized, standalone version.
# The Perl code below is a minified version of `dmenu-print-history`.
#
# (c) 2015 Mantas Mikulėnas <grawity@gmail.com> Released under the MIT Expat
# License (dist/LICENSE.expat)
#
# Frecency algorithm borrowed from rupa/z:
#   <https://github.com/rupa/z/wiki/frecency>
#   (c) 2009 rupa deadwyler, released under the WTFPL license

prompt='run »'

ignore='mm'

hist=${XDG_CACHE_HOME:-$HOME/.cache}/dmenu.history

perl='
sub uniq (@) { my %seen; grep {!$seen{$_}++} @_; }

sub rank {
	my ($time) = @_;
	my $age = time - $time;
	return  4  if $age < 3600;
	return  2  if $age < 86400;
	return 1/2 if $age < 604800;
	return 1/4;
}

$histfile = shift @ARGV // die("missing histfile argument\n");
if (open(my $f, "<", $histfile)) {
	@history = map {/^(\d+) (.+)$/ ? [int $1, $2] : [0, $_]}
	           grep {chomp; 1} <$f>;
	close($f);
} else {
	exit if $!{ENOENT};
	die("could not open histfile: $!\n");
}
exit if !@history;
for (@history) {
	my ($time, $item) = @$_;
	if ($time{$item} < $time) {
		$time{$item} = $time;
	}
}
@history = map {$_->[1]} @history;
$count{$_} += 1 for @history;
$count{$_} *= rank($time{$_}) for keys %time;
say for reverse
	sort {$count{$a} <=> $count{$b}}
	uniq @history;
'

_ignore="^($ignore)( |\$)"

input=$(perl -E "$perl" "$hist" | dmenu -l 7 -p "$prompt")

if [[ "$input" ]]; then
	if ! [[ "$input" =~ $_ignore ]]; then
		echo "$(date +%s) $input" >> "$hist"
	fi
	echo "$input" | ${SHELL:-/bin/sh} &
fi
