#!/usr/bin/env python2
# Convert OpenSSH public key to DNS SSHFP record
# Status: working, unpolished

from __future__ import print_function
import sys
import hashlib
import nullroute.authorized_keys as authorized_keys

keytypes = {
    "ssh-rsa":              1,
    "ssh-dss":              2,
    "ecdsa-sha2-nistp256":  3,
}

hashtypes = [
    (1, hashlib.sha1),
    (2, hashlib.sha256),
]

def parse(path):
    for line in open(path):
        line = line.strip()
        if not line or line.startswith("#"):
            continue
        key = authorized_keys.PublicKey(line)
        if key.algo not in keytypes:
            print("Warning: No SSHFP type for '%s' keys." % key.algo,
                  file=sys.stderr)
            continue
        for hash_id, hash_func in hashtypes:
            keyhash = hash_func(key.blob)
            hexhash = keyhash.hexdigest()
            yield {
                "key": key,
                "hash_id": hash_id,
                "hash": keyhash.digest(),
                "rrdata": "%d %d %s" % (keytypes[key.algo],
                                        hash_id,
                                        keyhash.hexdigest())
            }

host = sys.argv[1]
infile = sys.argv[2]

for entry in parse(infile):
    print(repr(entry["key"]))
    print("%s\t%s\t%s" % (host, "SSHFP", entry["rrdata"]))
