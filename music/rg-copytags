#!/usr/bin/env python2
# Copy ReplayGain tags from various formats to MP3 (for iPod downconversion;
# ffmpeg does not copy RVA2 automatically)

import sys
import mutagen

def rva_from_string(gain, peak):
	rg_gain = float(gain[0].split(' ')[0])
	rg_peak = float(peak[0])
	return mutagen.id3.RVA2(desc=u'track', channel=1, gain=rg_gain, peak=rg_peak)

class GainValue(object):
	def __init__(self):
		self.gain = None
		self.peak = 1.0

	def __repr__(self):
		return "<GainValue gain=%f peak=%f>" % (self.gain, self.peak)

	@classmethod
	def from_rva2(self, frame):
		gv = self()
		gv.gain = frame.gain
		gv.peak = frame.peak
		return gv

	@classmethod
	def from_string(self, gain, peak):
		rg_gain = float(gain[0].split(' ')[0])
		rg_peak = float(peak[0])

		gv = self()
		gv.gain = rg_gain
		gv.peak = rg_peak
		return gv

	def to_string(self):
		return ("%.2f dB" % self.gain, "%.2f dB" % self.peak)

	def to_rva2(self):
		return mutagen.id3.RVA2(desc=u'track', channel=1, gain=self.gain, peak=self.peak)

	@classmethod
	def import_tag(self, tag):
		if u'RVA2:track' in tag:
			# ID3v2.4 RVA2
			print "Found ID3v2.4 RVA2 frame"
			return self.from_rva2(tag[u'RVA2:track'])
		elif u'TXXX:replaygain_track_gain' in tag:
			# ID3v2 foobar2000
			print "Found ID3v2 foobar2000 frame"
			return self.from_string(tag[u'TXXX:replaygain_track_gain'],
						tag[u'TXXX:replaygain_track_peak'])
		elif '----:com.apple.iTunes:replaygain_track_gain' in tag:
			# MP4 foobar2000
			print "Found MP4 foobar2000 frame"
			return self.from_string(tag['----:com.apple.iTunes:replaygain_track_gain'],
						tag['----:com.apple.iTunes:replaygain_track_peak'])
		elif 'replaygain_track_gain' in tag:
			# FLAC
			print "Found FLAC tag"
			return self.from_string(tag['replaygain_track_gain'],
						tag['replaygain_track_peak'])
		else:
			return None

	def export_id3(self, tag):
		tag[u'RVA2:track'] = self.to_rva2()
		rg_gain, rg_peak = self.to_string()
		tag[u'TXXX:replaygain_track_gain'] = mutagen.id3.TXXX(encoding=1, text=[rg_gain])
		tag[u'TXXX:replaygain_track_peak'] = mutagen.id3.TXXX(encoding=1, text=[rg_peak])

	def export_mp4(self, tag):
		rg_gain, rg_peak = self.to_string()
		tag['----:com.apple.iTunes:replaygain_track_gain'] = rg_gain
		tag['----:com.apple.iTunes:replaygain_track_peak'] = rg_peak

	def export_flac(self, tag):
		rg_gain, rg_peak = self.to_string()
		tag['replaygain_track_gain'] = rg_gain
		tag['replaygain_track_peak'] = rg_peak

srcfile = sys.argv[1]
try:
	dstfile = sys.argv[2]
except IndexError:
	dstfile = None

srctag = mutagen.File(srcfile)
dsttag = mutagen.mp3.MP3(dstfile) if dstfile else None

gv = GainValue.import_tag(srctag)

if gv:
	print gv
	if dsttag:
		gv.export_id3(dsttag)
		print dsttag.keys()
		dsttag.save()
else:
	print "No ReplayGain tag found."
	print srctag
