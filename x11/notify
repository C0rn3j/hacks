#!/usr/bin/env perl
# notify - libnotify command-line interface not entirely unlike 'notify-send'
#
# Released under WTFPL v2 <http://sam.zoy.org/wtfpl/>

use common::sense;
use File::Path qw(make_path);
use Net::DBus;
use Getopt::Long qw(:config no_ignore_case bundling);

my $statedir	= ($ENV{XDG_CACHE_HOME} // $ENV{HOME}."/.cache") . "/notify/";

my $urgency	= 1;
my $icon	= "";
my $id		= 0;
my $summary	= "";
my $body	= "";
my @actions	= ();
my %hints	= ();
my $application	= "notify";
my $timeout	= 3;
my $statefile	= undef;
my $oldbody	= "";
my $appendbody	= 0;
my $urgency	= undef;

GetOptions(
	'a|appname=s'	=> \$application,
	'i|icon=s'	=> \$icon,
	'r|replace=i'	=> \$id,
	't|timeout=i'	=> \$timeout,
	's|state=s'	=> \$statefile,
	'A|append'	=> \$appendbody,
	'u|urgency=s'	=> \$urgency,
) or die "$@";

$summary = shift(@ARGV) or die "notify: summary not given\n";
$body = join(" ", @ARGV);

if (defined $statefile) {
	if ($statefile =~ s/^\+/$statedir/) {
		# If +name given as state file, the user wants as little
		# hassle as possible. Create the directories.
		-d $statedir || make_path($statedir);
	}
	if (open(my $fh, "<", $statefile)) {
		$id = int <$fh>;
		chomp($oldbody = join("", <$fh>));
		close($fh);
	}
}

if ($appendbody) {
	unless (defined $statefile) {
		warn "notify: --append is useless without state file\n";
	}
	$body = join("\n", grep {length} ($oldbody, $body));
}

if (defined $urgency) {
	my $val;
	given ($urgency) {
		when ('low') { $val = 0; }
		when ('normal') { $val = 1; }
		when ('critical') { $val = 2; }
		default {
			die "notify: invalid urgency level (can be low, normal, critical)\n";
		}
	}
	$hints{urgency} = Net::DBus::dbus_byte($val);
}

my $bus = Net::DBus->session;
my $svc = $bus->get_service("org.freedesktop.Notifications");
my $obj = $svc->get_object("/org/freedesktop/Notifications");

$id = $obj->Notify($application,
		$id,
		$icon,
		$summary,
		$body,
		\@actions,
		\%hints,
		$timeout);

if (defined $statefile) {
	open(my $fh, ">", $statefile) or die "notify: cannot update state: $!\n";
	say $fh $id;
	say $fh $body;
	close($fh);
} else {
	say $id;
}
