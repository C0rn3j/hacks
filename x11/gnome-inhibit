#!/usr/bin/env perl
use feature "say";
use Net::DBus;
use POSIX;
use constant {
	INHIBIT_LOGOUT		=> 1<<0,
	INHIBIT_SWITCH_USER	=> 1<<1,
	INHIBIT_SUSPEND		=> 1<<2,
	INHIBIT_IDLE		=> 1<<3,
};

sub usage {
	say for
	"Usage: gnome-inhibit",
	"       gnome-inhibit <command> [args...]",
	"",
	"Prevents system from going into suspend mode on idle.",
	"",
	"If <command> is given, inhibit will last until the command exits; otherwise,",
	"this tool will keep running until manually killed/terminated.",
	;
	exit(2);
}

my $app_id	= "gnome-inhibit";
my $top_xid	= 0;
my $reason	= "User-initiated inhibit.";
my $flags	= INHIBIT_IDLE;

my $cookie	= 0;
my @cmd		= ();
my $return	= 0;

if ($ARGV[0] =~ /^-/) {
	usage();
} elsif (@ARGV) {
	@cmd = @ARGV;
}

my $bus	= Net::DBus->session;
my $sm	= $bus->get_service("org.gnome.SessionManager")
		->get_object("/org/gnome/SessionManager");

sub inhibit {
	$cookie = $sm->Inhibit($app_id, $top_xid, $reason, $flags);
	print "$app_id: inhibit ok ($cookie)\n";
}

sub uninhibit {
	$sm->Uninhibit($cookie);
	print "$app_id: uninhibit ok\n";
	$cookie = 0;
}

inhibit();

if (@cmd) {
	print "$app_id: executing command: @cmd\n";
	$return = system {$cmd[0]} @cmd;
	$return = POSIX::WEXITSTATUS($return);
} else {
	print "$app_id: pausing until signal; use Ctrl-C to interrupt\n";
	POSIX::pause();
}

uninhibit();
exit($return);
