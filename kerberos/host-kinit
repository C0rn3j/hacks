#!/usr/bin/env bash
service='host'
fqdn=$(hostname -f)
principal=''
keytab='/etc/krb5.keytab'
owner=''
ccname='/tmp/krb5cc_host'
command=()
daemonize=true
runcommand=false

if (( PPID == 1 )); then
	daemonize=false
fi

while getopts 'k:s:u:' OPT; do
	case $OPT in
	'k')	keytab=$OPTARG;;
	's')	service=$OPTARG;;
	'u')	owner=$OPTARG;;
	esac
done

command=("${@:$OPTIND}")

(( ${#command[@]} )) &&
	runcommand=true

[[ ! $principal ]] &&
	principal="$service/$fqdn"

[[ $service != "host" ]] &&
	ccname+="_$service"

$runcommand &&
	ccname=$(mktemp "${ccname}_XXXXXXXX")

export KRB5CCNAME=$ccname

lockfile=${ccname#FILE:}
lockfile=${lockfile//'/'/'-'}
lockfile=/run/lock/host-kinit.${lockfile#'-'}

args=(
	-k "$KRB5CCNAME"	# explicit ccache for `ps`
	-L -K 30		# syslog, check every 30m
	-f "$keytab"		# credentials
	-u "$principal"		# principal
	-F -P			# not forwardable, not proxiable
)

if [[ $owner ]]; then
	args+=( -o "$owner" )
fi

if ! { exec {lockfd}>"$lockfile" && flock -x -n $lockfd; }; then
	echo "Failed to obtain lock on $lockfile, exiting"
	exit 1
fi

if $runcommand; then
	args+=( -q )		# quiet
	args+=( -- "${command[@]}" )
	k5start "${args[@]}"
	kdestroy
else
	if $daemonize; then
		args+=( -b )
	fi
	exec k5start "${args[@]}"
fi
