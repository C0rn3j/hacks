#!/usr/bin/env perl
use warnings;
use strict;
use feature qw(say switch);

sub uniq { my %seen; grep {!$seen{$_}++} @_; }

my @keys;

my $cache;
my $defprinc;
my $defrealm;
my @extrealms;
my %creds;
my $init;
my $tgt;

open(my $proc, "-|", "pklist")
	or die "Please install 'pklist' to use this tool.\n";
while (<$proc>) {
	chomp;
	my @l = split(/\t/, $_);
	given (shift @l) {
		when ("cache") {
			($cache) = @l;
		}
		when ("principal") {
			($defprinc) = @l;
			($defrealm) = $defprinc =~ /@(.+?)$/;
		}
		when ("CREDS") {
			@keys = @l;
		}
		when ("ticket") {
			my %tkt = ();
			@tkt{@keys} = @l;
			my ($name, $realm) = $tkt{server_name} =~ /^(.+)@(.+)$/;
			push @extrealms, $realm
				unless $realm eq $defrealm;

			if ($name =~ m|^krbtgt/(.+)|) {
				unshift @{$creds{$1}}, \%tkt;
				push @extrealms, $1
					unless $1 eq $defrealm;
				if ($1 eq $realm) {
					$tgt = \%tkt;
				}
				if ($tkt{flags} =~ /I/) {
					$init = \%tkt;
				}
			} else {
				push @{$creds{$realm}}, \%tkt;
			}
		}
	}
}
close($proc);

my $expirystr;
my $expiry = $init->{expiry_time} || $tgt->{expiry_time};
if ($expiry <= time) {
	$expirystr = "\e[31m" . "expired" . "\e[m";
} else {
	$expirystr = "expires in ";
	my %diff;
	$diff{_} = int $expiry - time;
	$diff{_} -= $diff{s} = $diff{_} % 60;
	$diff{_} /= 60;
	$diff{_} -= $diff{m} = $diff{_} % 60;
	$diff{_} /= 60;
	$diff{_} -= $diff{h} = $diff{_} % 24;
	$diff{_} /= 24;
	$diff{d} = $diff{_} + 0;
	if ($diff{d} > 1) {
		$expirystr .= "$diff{d} days";
	} elsif ($diff{h} > 0) {
		$expirystr .= "$diff{h}h $diff{m}m";
	} elsif ($diff{m} > 1) {
		$expirystr .= "$diff{m} minutes";
	} else {
		$expirystr .= "a minute";
	}
}

say "Credentials for \e[1m${defprinc}\e[m (${expirystr}):";
say "";

my @realms = ($defrealm, uniq sort @extrealms);
for my $realm (@realms) {
	for my $tkt (@{$creds{$realm}}) {
		my $color = "0";
		my $label = "";
		my $width = 0;
		my $istgt = 0;
		my $isinit = 0;

		my ($svname, $svrealm) = $tkt->{server_name} =~ /^(.+)@(.+)$/;
		if ($svname =~ m|^krbtgt/(.+)$|) {
			$istgt = 1;

			my $nextrealm = $1;
			$color = $svrealm eq $nextrealm
				? "1;32"
				: $svrealm eq $defrealm
				? "1;35"
				: "1;34"
				;
			$label .= "\e[${color}m${svname}\e[m";
			$width += length $svname;

			if ($svrealm ne $nextrealm && $svrealm ne $defrealm) {
				$color = $svrealm eq $defrealm ? "35" : "34";
				$label .= " \e[${color}m\@ ${svrealm}\e[m";
				$width += length " \@ $svrealm";
			}
		} else {
			$label .= $svname;
			$width += length $svname;
		}
		
		my $flags = $tkt->{flags};
		my @eflags = ();
		$flags =~ /A/ or push @eflags, "!A";
		$flags =~ s/[AT]//g;
		if ($istgt) {
			$flags =~ s/[P]//g;
		} else {
			$flags =~ s/[FR]//g;
		}
		$flags = join(" ", $flags, @eflags);

		say " "x4,
			$label, " "x(45-$width), " ",
			$flags; #, " "x(5-length $flags), " ";
	}
}
