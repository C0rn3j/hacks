#!/usr/bin/env perl
use warnings;
use strict;
use feature 'switch';

my $out;
my $file = "irc";

open my $fh, ">", $file
	or die "$!";

while (<STDIN>) {
	my @m = /^(\w+) (\w+) (.+)$/ or next;
	my ($oldrev, $newrev, $ref) = @m;

	my ($refname, $reftype);
	given ($ref) {
		when (m|^refs/heads/(.+)$|) {
			($refname, $reftype) = ($1, "branch");
		}
		when (m|^refs/tags/(.+)$|) {
			($refname, $reftype) = ($1, "tag");
		}
		default {
			($refname, $reftype) = ($ref, "head");
		}
	}

	my $revisions;
	my $is_new_ref = 0;
	my $is_del_ref = 0;
	
	if ($oldrev =~ /^0+$/) {
		$is_new_ref = 1;
		$revisions = "$newrev";
	} elsif ($newrev =~ /^0+$/) {
		$is_del_ref = 1;
		$revisions = "$oldrev";
	} else {
		$revisions = "$oldrev..$newrev";
	}

	open my $git, "-|", ("git", "log", "--format=%H\t%h\t%aN\t%s", $revisions)
		or die "$!";
	
	while (<$git>) {
		my @m = /^(\w+)\t(\w+)\t(.+?)\t(.+)$/ or next;
		my ($commit, $short, $author, $message) = @m;

		my $files;

		unless ($is_new_ref || $is_del_ref) {
			chomp(my @files = `git diff --name-only $commit^..$commit 2>/dev/null`);

			$files = (@files > 2) ? scalar(@files)." files" : join(", ", @files);
		}

#		$author =~ s/(\S)(\S+) /$1/g;

		if ($is_new_ref) {
			$out = "New $reftype: [$refname $short] $author: $message\n";
		} elsif ($is_del_ref) {
			$out = "Deleted $reftype: [$refname $short] $author: $message\n";
		} else {
			$out = "[$refname $short] $author: ($files) $message\n";
		}

		print $out;
		print $fh $out;

		last if ($is_new_ref || $is_del_ref);
	}
	close $git;
}

close $fh;

